// Generated by ReScript, PLEASE EDIT WITH CARE

import ColorjsIo from "colorjs.io";

function toOklch(c) {
  return c.to("oklch");
}

function getOklchCoords(c) {
  return c.to("oklch").coords;
}

function setOklchLightness(c, l) {
  var oklch = c.to("oklch");
  var coords = oklch.coords;
  return oklch.set({
              l: l,
              c: coords[1],
              h: coords[2]
            });
}

function setOklchChroma(c, chroma) {
  var oklch = c.to("oklch");
  var coords = oklch.coords;
  return oklch.set({
              l: coords[0],
              c: chroma,
              h: coords[2]
            });
}

function setOklchHue(c, hue) {
  var oklch = c.to("oklch");
  var coords = oklch.coords;
  return oklch.set({
              l: coords[0],
              c: coords[1],
              h: hue
            });
}

function toP3(c) {
  return c.to("p3");
}

function getP3Coords(c) {
  return c.to("p3").coords;
}

function oklch(l, c, h) {
  return new ColorjsIo({
              space: "oklch",
              coords: [
                l,
                c,
                h
              ],
              alpha: 1.0
            });
}

function oklchWithAlpha(l, c, h, alpha) {
  return new ColorjsIo({
              space: "oklch",
              coords: [
                l,
                c,
                h
              ],
              alpha: alpha
            });
}

function p3(r, g, b) {
  return new ColorjsIo({
              space: "p3",
              coords: [
                r,
                g,
                b
              ],
              alpha: 1.0
            });
}

function p3WithAlpha(r, g, b, alpha) {
  return new ColorjsIo({
              space: "p3",
              coords: [
                r,
                g,
                b
              ],
              alpha: alpha
            });
}

function parseColor(colorString) {
  return new ColorjsIo(colorString);
}

function toHex(c) {
  return c.to("srgb").toString();
}

function toOklchString(c) {
  return c.to("oklch").toString();
}

function toP3String(c) {
  return c.to("p3").toString();
}

export {
  toOklch ,
  getOklchCoords ,
  setOklchLightness ,
  setOklchChroma ,
  setOklchHue ,
  toP3 ,
  getP3Coords ,
  oklch ,
  oklchWithAlpha ,
  p3 ,
  p3WithAlpha ,
  parseColor ,
  toHex ,
  toOklchString ,
  toP3String ,
}
/* colorjs.io Not a pure module */
